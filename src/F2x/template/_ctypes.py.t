# -*- coding: {{ context.args.encoding }} -*-
# This file was generated by F2x. Please do not change directly!

import F2x
import ctypes

{{ src.module_name }} = ctypes.cdll.LoadLibrary("lib{{ src.module_name }}.so")

{%- for type_def in src.type_defs %}
{{ src.module_name }}.{{ type_def.name }}_new.restype = ctypes.c_void_p
{{ src.module_name }}.{{ type_def.name }}_new.argtypes = []
{{ src.module_name }}.{{ type_def.name }}_free.restype = None
{{ src.module_name }}.{{ type_def.name }}_free.argtypes = [ctypes.c_void_p]

{% for field in type_def.fields %}
{{ src.module_name }}.{{ type_def.name }}_GET_{{ field.name }}.restype = {{ field.type }}
{{ src.module_name }}.{{ type_def.name }}_GET_{{ field.name }}.argtypes = [ctypes.c_void_p]
{% endfor %}

class {{ type_def.name }}(object):
	def __init__(self):
		self.c_ptr = {{ src.module_name }}.{{ type_def.name }}_new()
	
	def __del__(self):
		{{ src.module_name }}.{{ type_def.name }}_free(self.c_ptr)
		self.c_ptr = None
	
{% for field in type_def.fields %}
	def _get_{{ field.name }}(self):
		return {{ src.module_name }}.{{ type_def.name }}_GET_{{ field.name }}(self.c_ptr)
	
	def _set_{{ field.name }}(self, value):
		{{ src.module_name }}.{{ type_def.name }}_SET_{{ field.name }}(self.c_ptr, value)
	
	{{ field.name }} = property(_get_{{ field.name }}, _set_{{ field.name }})
{% endfor %}


{% endfor %}
